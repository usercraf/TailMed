import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from key_file import TOKEN
from log_file import logger
from key_file import cur, base

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(CommandStart)
async def start(message: types.Message):
    admin_id = cur.execute("""SELECT 1 FROM users WHERE telegram_id =?""", (message.from_user.id,)).fetchone()
    btn = {'add_doctor': '–î–æ–¥–∞—Ç–∏ –ª—ñ–∫–∞—Ä—è', 'del_doctor' : '–í–∏–¥–∞–ª–∏—Ç–∏ –ª—ñ–∫–∞—Ä—è', 'verification' : '–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ª—ñ–∫–∞—Ä—è'}
    print(admin_id)
    if admin_id is not None:
        builder = InlineKeyboardBuilder()
        for key, value in btn.items():
            builder.add(types.InlineKeyboardButton(text=value, callback_data=key))
        builder.adjust(1)
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.first_name} (ID: {message.from_user.id}) –≤–∏–∫–æ–Ω–∞–≤ –≤—Ö—ñ–¥ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä")
        await message.answer(f'{message.from_user.first_name} –î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ', reply_markup=builder.as_markup())
    else:
        logger.info(
            f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.first_name} (ID: {message.from_user.id}) –≤–∏–∫–æ–Ω–∞–≤ –≤—Ö—ñ–¥ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á")
        await message.answer(f'–í—ñ—Ç–∞—é –í–∞—Å {message.from_user.first_name}. –î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ')


@dp.callback_query(F.data == 'Home')
async def home_btn(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()

    # record_to_coach = types.ReplyKeyboardMarkup(
    #     keyboard=[[types.KeyboardButton(text="–ó–∞–ø–∏—Å –¥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ ‚è∫Ô∏è")],
    #               [types.KeyboardButton(text="–Ø —Ç—Ä–µ–Ω–µ—Ä üí™")],],
    #     resize_keyboard=True,
    #     one_time_keyboard=True,
    # )

    await callback.message.answer('–í–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ')

    await callback.answer()




# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    print('Bot run')
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())